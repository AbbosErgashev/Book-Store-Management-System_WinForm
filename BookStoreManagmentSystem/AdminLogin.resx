<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>